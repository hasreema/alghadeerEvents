version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: alghadeer_mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: al_ghadeer_events
    volumes:
      - mongodb_data:/data/db
      - ./backend/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - alghadeer_network

  # Redis (for caching and background tasks)
  redis:
    image: redis:7-alpine
    container_name: alghadeer_redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - alghadeer_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: alghadeer_backend
    restart: always
    ports:
      - "8000:8000"
    environment:
      # MongoDB
      MONGODB_URL: mongodb://admin:admin123@mongodb:27017/al_ghadeer_events?authSource=admin
      DATABASE_NAME: al_ghadeer_events
      # Redis
      REDIS_URL: redis://redis:6379/0
      # Application
      APP_NAME: "Al Ghadeer Events Management"
      APP_VERSION: "1.0.0"
      DEBUG: "False"
      HOST: "0.0.0.0"
      PORT: "8000"
      # JWT
      SECRET_KEY: "your-super-secret-key-change-this-in-production"
      ACCESS_TOKEN_EXPIRE_MINUTES: "30"
      REFRESH_TOKEN_EXPIRE_DAYS: "7"
      # Admin User
      ADMIN_EMAIL: "admin@alghadeer.com"
      ADMIN_PASSWORD: "admin123"
      # CORS
      CORS_ORIGINS: '["http://localhost:3000", "http://frontend:3000"]'
      # File Upload
      UPLOAD_DIR: "/app/uploads"
      MAX_UPLOAD_SIZE: "5242880"
      # Timezone
      TIMEZONE: "Asia/Jerusalem"
    volumes:
      - ./backend/app:/app/app
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
    depends_on:
      - mongodb
      - redis
    networks:
      - alghadeer_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: alghadeer_frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000/api
      NEXT_PUBLIC_WS_URL: ws://localhost:8000
      NEXT_PUBLIC_APP_NAME: "Al Ghadeer Events"
      NEXT_PUBLIC_DEFAULT_LANGUAGE: "en"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    depends_on:
      - backend
    networks:
      - alghadeer_network

  # Nginx Reverse Proxy (optional, for production-like setup)
  nginx:
    image: nginx:alpine
    container_name: alghadeer_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - alghadeer_network

volumes:
  mongodb_data:
  redis_data:
  backend_uploads:
  backend_logs:

networks:
  alghadeer_network:
    driver: bridge