version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: alghadeer_mongodb_dev
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: al_ghadeer_events
    volumes:
      - mongodb_data_dev:/data/db
      - ./backend/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - alghadeer_network_dev

  # Redis
  redis:
    image: redis:7-alpine
    container_name: alghadeer_redis_dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data_dev:/data
    networks:
      - alghadeer_network_dev

  # Backend API with hot-reload
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: alghadeer_backend_dev
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      # MongoDB
      MONGODB_URL: mongodb://admin:admin123@mongodb:27017/al_ghadeer_events?authSource=admin
      DATABASE_NAME: al_ghadeer_events
      # Redis
      REDIS_URL: redis://redis:6379/0
      # Application
      DEBUG: "True"
      # JWT
      SECRET_KEY: "dev-secret-key-not-for-production"
      # Admin User
      ADMIN_EMAIL: "admin@alghadeer.com"
      ADMIN_PASSWORD: "admin123"
      # CORS
      CORS_ORIGINS: '["http://localhost:3000", "http://localhost:3001", "http://frontend:3000"]'
    volumes:
      - ./backend/app:/app/app
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    depends_on:
      - mongodb
      - redis
    networks:
      - alghadeer_network_dev
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend with hot-reload
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: alghadeer_frontend_dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000/api
      NEXT_PUBLIC_WS_URL: ws://localhost:8000
      NODE_ENV: development
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - alghadeer_network_dev
    command: npm run dev

  # MongoDB Express (Web UI for MongoDB)
  mongo-express:
    image: mongo-express:latest
    container_name: alghadeer_mongo_express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin123
      ME_CONFIG_MONGODB_URL: mongodb://admin:admin123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      - mongodb
    networks:
      - alghadeer_network_dev

  # Redis Commander (Web UI for Redis)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: alghadeer_redis_commander
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
    depends_on:
      - redis
    networks:
      - alghadeer_network_dev

volumes:
  mongodb_data_dev:
  redis_data_dev:

networks:
  alghadeer_network_dev:
    driver: bridge